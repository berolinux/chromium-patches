From d2c2562fc1e0174acbcb61d4747db2bca148884c Mon Sep 17 00:00:00 2001
From: Stephan Hartmann <stha09@googlemail.com>
Date: Mon, 08 Feb 2021 18:24:43 +0000
Subject: [PATCH] GCC: make base::InSeconds(F) constexpr

blink::AnimationTimeDelta() uses it in one of the constexpr
constructors.

Bug: 819294
Change-Id: If16b9c20335440de9d2a1bbf170b586f2492fe0e
Reviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/2644907
Reviewed-by: Gabriel Charette <gab@chromium.org>
Commit-Queue: Gabriel Charette <gab@chromium.org>
Cr-Commit-Position: refs/heads/master@{#851793}
---

diff --git a/base/time/time.cc b/base/time/time.cc
index d224bd01..38ff4d9 100644
--- a/base/time/time.cc
+++ b/base/time/time.cc
@@ -196,17 +196,6 @@
                       : std::numeric_limits<int>::max();
 }
 
-double TimeDelta::InSecondsF() const {
-  if (!is_inf())
-    return double{delta_} / Time::kMicrosecondsPerSecond;
-  return (delta_ < 0) ? -std::numeric_limits<double>::infinity()
-                      : std::numeric_limits<double>::infinity();
-}
-
-int64_t TimeDelta::InSeconds() const {
-  return is_inf() ? delta_ : (delta_ / Time::kMicrosecondsPerSecond);
-}
-
 double TimeDelta::InMillisecondsF() const {
   if (!is_inf())
     return double{delta_} / Time::kMicrosecondsPerMillisecond;
diff --git a/base/time/time.h b/base/time/time.h
index 0b3a9447..f93f07f 100644
--- a/base/time/time.h
+++ b/base/time/time.h
@@ -236,8 +236,8 @@
   int InDaysFloored() const;
   constexpr int InHours() const;
   constexpr int InMinutes() const;
-  double InSecondsF() const;
-  int64_t InSeconds() const;
+  constexpr double InSecondsF() const;
+  constexpr int64_t InSeconds() const;
   double InMillisecondsF() const;
   int64_t InMilliseconds() const;
   int64_t InMillisecondsRoundedUp() const;
@@ -913,6 +913,17 @@
   return saturated_cast<int>(delta_ / Time::kMicrosecondsPerMinute);
 }
 
+constexpr double TimeDelta::InSecondsF() const {
+  if (!is_inf())
+    return static_cast<double>(delta_) / Time::kMicrosecondsPerSecond;
+  return (delta_ < 0) ? -std::numeric_limits<double>::infinity()
+                      : std::numeric_limits<double>::infinity();
+}
+
+constexpr int64_t TimeDelta::InSeconds() const {
+  return is_inf() ? delta_ : (delta_ / Time::kMicrosecondsPerSecond);
+}
+
 constexpr int64_t TimeDelta::InNanoseconds() const {
   return base::ClampMul(delta_, Time::kNanosecondsPerMicrosecond);
 }
