From ec534448395440082072abb2c6fcdb7a0f6bcfc6 Mon Sep 17 00:00:00 2001
From: Stephan Hartmann <stha09@googlemail.com>
Date: Fri, 29 Jan 2021 14:42:54 +0000
Subject: [PATCH] GCC: fix name clash cause of multiple BindingInfo definitions

BindingInfo is declared in BindingInfo.h. However,
ShaderModule.h declares an alias BindingInfo in EntryPointMetadata.
This confuses GCC. Rename the alias to BindingInfoArray.

Bug: chromium:819294
Change-Id: Ia43c9eb8d793a3078faa6340980017236a6adbb3
Reviewed-on: https://dawn-review.googlesource.com/c/dawn/+/39502
Reviewed-by: Corentin Wallez <cwallez@chromium.org>
Commit-Queue: Corentin Wallez <cwallez@chromium.org>
---

diff --git a/third_party/dawn/src/dawn_native/PipelineLayout.cpp b/third_party/dawn/src/dawn_native/PipelineLayout.cpp
index b1317ae..5cb05d3 100644
--- a/third_party/dawn/src/dawn_native/PipelineLayout.cpp
+++ b/third_party/dawn/src/dawn_native/PipelineLayout.cpp
@@ -176,7 +176,7 @@
 
         // Loops over all the reflected BindGroupLayoutEntries from shaders.
         for (const StageAndDescriptor& stage : stages) {
-            const EntryPointMetadata::BindingInfo& info =
+            const EntryPointMetadata::BindingInfoArray& info =
                 stage.second->module->GetEntryPoint(stage.second->entryPoint).bindings;
 
             for (BindGroupIndex group(0); group < info.size(); ++group) {
diff --git a/third_party/dawn/src/dawn_native/ShaderModule.cpp b/third_party/dawn/src/dawn_native/ShaderModule.cpp
index ddb3f3f..f7bf41c 100644
--- a/third_party/dawn/src/dawn_native/ShaderModule.cpp
+++ b/third_party/dawn/src/dawn_native/ShaderModule.cpp
@@ -478,7 +478,7 @@
                 [](const DeviceBase* device,
                    const spirv_cross::SmallVector<spirv_cross::Resource>& resources,
                    const spirv_cross::Compiler& compiler, BindingInfoType bindingType,
-                   EntryPointMetadata::BindingInfo* metadataBindings,
+                   EntryPointMetadata::BindingInfoArray* metadataBindings,
                    bool isStorageBuffer = false) -> MaybeError {
                 for (const auto& resource : resources) {
                     if (!compiler.get_decoration_bitset(resource.id).get(spv::DecorationBinding)) {
diff --git a/third_party/dawn/src/dawn_native/ShaderModule.h b/third_party/dawn/src/dawn_native/ShaderModule.h
index 217e2dd..68c36f2 100644
--- a/third_party/dawn/src/dawn_native/ShaderModule.h
+++ b/third_party/dawn/src/dawn_native/ShaderModule.h
@@ -105,8 +105,8 @@
         // bindings[G][B] is the reflection data for the binding defined with
         // [[group=G, binding=B]] in WGSL / SPIRV.
         using BindingGroupInfoMap = std::map<BindingNumber, ShaderBindingInfo>;
-        using BindingInfo = ityp::array<BindGroupIndex, BindingGroupInfoMap, kMaxBindGroups>;
-        BindingInfo bindings;
+        using BindingInfoArray = ityp::array<BindGroupIndex, BindingGroupInfoMap, kMaxBindGroups>;
+        BindingInfoArray bindings;
 
         // The set of vertex attributes this entryPoint uses.
         std::bitset<kMaxVertexAttributes> usedVertexAttributes;
diff --git a/src/dawn_native/d3d12/ShaderModuleD3D12.cpp b/src/dawn_native/d3d12/ShaderModuleD3D12.cpp
index 0f7be68..1c9bf1c 100644
--- a/third_party/dawn/src/dawn_native/d3d12/ShaderModuleD3D12.cpp
+++ b/third_party/dawn/src/dawn_native/d3d12/ShaderModuleD3D12.cpp
@@ -285,7 +285,7 @@
         compiler.set_hlsl_options(options_hlsl);
         compiler.set_entry_point(entryPointName, ShaderStageToExecutionModel(stage));
 
-        const EntryPointMetadata::BindingInfo& moduleBindingInfo =
+        const EntryPointMetadata::BindingInfoArray& moduleBindingInfo =
             GetEntryPoint(entryPointName).bindings;
 
         for (BindGroupIndex group : IterateBitSet(layout->GetBindGroupLayoutsMask())) {
diff --git a/third_party/dawn/src/dawn_native/opengl/ShaderModuleGL.cpp b/third_party/dawn/src/dawn_native/opengl/ShaderModuleGL.cpp
index 916027d..398589d 100644
--- a/third_party/dawn/src/dawn_native/opengl/ShaderModuleGL.cpp
+++ b/third_party/dawn/src/dawn_native/opengl/ShaderModuleGL.cpp
@@ -170,7 +170,8 @@
             compiler.set_name(combined.combined_id, info->GetName());
         }
 
-        const EntryPointMetadata::BindingInfo& bindingInfo = GetEntryPoint(entryPointName).bindings;
+        const EntryPointMetadata::BindingInfoArray& bindingInfo =
+            GetEntryPoint(entryPointName).bindings;
 
         // Change binding names to be "dawn_binding_<group>_<binding>".
         // Also unsets the SPIRV "Binding" decoration as it outputs "layout(binding=)" which
