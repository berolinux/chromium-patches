From cee574832664961794a19c0387a456379464d657 Mon Sep 17 00:00:00 2001
From: Jose Dapena Paz <jdapena@igalia.com>
Date: Wed, 09 Sep 2020 18:18:07 +0200
Subject: [PATCH] GCC: init kImageMemoryBarrierData with initializer constructor

GCC fails to automatically map the initializer assignment for
initializing the angle::PackedEnumMap. So this change adds the
type hint ImageMemoryBarrierData to the second part of the pairs
passed to construct the PackedEnumMap.

GCC error:
    ./../third_party/angle/src/libANGLE/renderer/vulkan/vk_helpers.cpp:387:1: error: could not convert ‘{{rx::vk::ImageLayout::Undefined, {"Undefined", ...}}}’ from ‘<brace-enclosed initializer list>’
    to ‘const angle::PackedEnumMap<rx::vk::ImageLayout, rx::vk::{anonymous}::ImageMemoryBarrierData>’
      387 | };
          | ^
          | |
          | <brace-enclosed initializer list>

Bug: chromium:819294
Change-Id: I314c43c0795e54cabd891205ee935c6354d11658
Reviewed-on: https://chromium-review.googlesource.com/c/angle/angle/+/2401778
Reviewed-by: Shahbaz Youssefi <syoussefi@chromium.org>
Commit-Queue: Shahbaz Youssefi <syoussefi@chromium.org>

(adapted for chromium-86)
---

diff --git a/third_party/angle/src/libANGLE/renderer/vulkan/vk_helpers.cpp b/third_party/angle/src/libANGLE/renderer/vulkan/vk_helpers.cpp
index 8e11774..4be7440 100644
--- a/third_party/angle/src/libANGLE/renderer/vulkan/vk_helpers.cpp
+++ b/third_party/angle/src/libANGLE/renderer/vulkan/vk_helpers.cpp
@@ -97,7 +97,7 @@
 constexpr angle::PackedEnumMap<ImageLayout, ImageMemoryBarrierData> kImageMemoryBarrierData = {
     {
         ImageLayout::Undefined,
-        {
+        ImageMemoryBarrierData{
             "Undefined",
             VK_IMAGE_LAYOUT_UNDEFINED,
             VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT,
@@ -111,7 +111,7 @@
     },
     {
         ImageLayout::ExternalPreInitialized,
-        {
+        ImageMemoryBarrierData{
             "ExternalPreInitialized",
             VK_IMAGE_LAYOUT_PREINITIALIZED,
             VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT,
@@ -125,7 +125,7 @@
     },
     {
         ImageLayout::ExternalShadersReadOnly,
-        {
+        ImageMemoryBarrierData{
             "ExternalShadersReadOnly",
             VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL,
             VK_PIPELINE_STAGE_ALL_COMMANDS_BIT,
@@ -140,7 +140,7 @@
     },
     {
         ImageLayout::ExternalShadersWrite,
-        {
+        ImageMemoryBarrierData{
             "ExternalShadersWrite",
             VK_IMAGE_LAYOUT_GENERAL,
             VK_PIPELINE_STAGE_ALL_COMMANDS_BIT,
@@ -155,7 +155,7 @@
     },
     {
         ImageLayout::TransferSrc,
-        {
+        ImageMemoryBarrierData{
             "TransferSrc",
             VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL,
             VK_PIPELINE_STAGE_TRANSFER_BIT,
@@ -169,7 +169,7 @@
     },
     {
         ImageLayout::TransferDst,
-        {
+        ImageMemoryBarrierData{
             "TransferDst",
             VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL,
             VK_PIPELINE_STAGE_TRANSFER_BIT,
@@ -183,7 +183,7 @@
     },
     {
         ImageLayout::VertexShaderReadOnly,
-        {
+        ImageMemoryBarrierData{
             "VertexShaderReadOnly",
             VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL,
             VK_PIPELINE_STAGE_VERTEX_SHADER_BIT,
@@ -197,7 +197,7 @@
     },
     {
         ImageLayout::VertexShaderWrite,
-        {
+        ImageMemoryBarrierData{
             "VertexShaderWrite",
             VK_IMAGE_LAYOUT_GENERAL,
             VK_PIPELINE_STAGE_VERTEX_SHADER_BIT,
@@ -211,7 +211,7 @@
     },
     {
         ImageLayout::GeometryShaderReadOnly,
-        {
+        ImageMemoryBarrierData{
             "GeometryShaderReadOnly",
             VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL,
             VK_PIPELINE_STAGE_GEOMETRY_SHADER_BIT,
@@ -225,7 +225,7 @@
     },
     {
         ImageLayout::GeometryShaderWrite,
-        {
+        ImageMemoryBarrierData{
             "GeometryShaderWrite",
             VK_IMAGE_LAYOUT_GENERAL,
             VK_PIPELINE_STAGE_GEOMETRY_SHADER_BIT,
@@ -239,7 +239,7 @@
     },
     {
         ImageLayout::FragmentShaderReadOnly,
-        {
+        ImageMemoryBarrierData{
             "FragmentShaderReadOnly",
             VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL,
             VK_PIPELINE_STAGE_FRAGMENT_SHADER_BIT,
@@ -253,7 +253,7 @@
     },
     {
         ImageLayout::FragmentShaderWrite,
-        {
+        ImageMemoryBarrierData{
             "FragmentShaderWrite",
             VK_IMAGE_LAYOUT_GENERAL,
             VK_PIPELINE_STAGE_FRAGMENT_SHADER_BIT,
@@ -267,7 +267,7 @@
     },
     {
         ImageLayout::ComputeShaderReadOnly,
-        {
+        ImageMemoryBarrierData{
             "ComputeShaderReadOnly",
             VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL,
             VK_PIPELINE_STAGE_COMPUTE_SHADER_BIT,
@@ -281,7 +281,7 @@
     },
     {
         ImageLayout::ComputeShaderWrite,
-        {
+        ImageMemoryBarrierData{
             "ComputeShaderWrite",
             VK_IMAGE_LAYOUT_GENERAL,
             VK_PIPELINE_STAGE_COMPUTE_SHADER_BIT,
@@ -295,7 +295,7 @@
     },
     {
         ImageLayout::AllGraphicsShadersReadOnly,
-        {
+        ImageMemoryBarrierData{
             "AllGraphicsShadersReadOnly",
             VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL,
             kAllShadersPipelineStageFlags,
@@ -310,7 +310,7 @@
     },
     {
         ImageLayout::AllGraphicsShadersWrite,
-        {
+        ImageMemoryBarrierData{
             "AllGraphicsShadersWrite",
             VK_IMAGE_LAYOUT_GENERAL,
             kAllShadersPipelineStageFlags,
@@ -325,7 +325,7 @@
     },
     {
         ImageLayout::ColorAttachment,
-        {
+        ImageMemoryBarrierData{
             "ColorAttachment",
             VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL,
             VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT,
@@ -339,7 +339,7 @@
     },
     {
         ImageLayout::DepthStencilReadOnly,
-        {
+        ImageMemoryBarrierData{
             "DepthStencilReadOnly",
             VK_IMAGE_LAYOUT_DEPTH_STENCIL_READ_ONLY_OPTIMAL,
             kAllShadersPipelineStageFlags | VK_PIPELINE_STAGE_EARLY_FRAGMENT_TESTS_BIT,
@@ -353,7 +353,7 @@
     },
     {
         ImageLayout::DepthStencilAttachment,
-        {
+        ImageMemoryBarrierData{
             "DepthStencilAttachment",
             VK_IMAGE_LAYOUT_DEPTH_STENCIL_ATTACHMENT_OPTIMAL,
             VK_PIPELINE_STAGE_EARLY_FRAGMENT_TESTS_BIT,
@@ -367,7 +367,7 @@
     },
     {
         ImageLayout::Present,
-        {
+        ImageMemoryBarrierData{
             "Present",
             VK_IMAGE_LAYOUT_PRESENT_SRC_KHR,
             VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT,
